
record(stringin, "$(P)POSN:SP:RBV")
{
	field(DESC, "Current target")
	field(DTYP,"asynOctetRead")
	field(INP,"@asyn($(LOOKUP),0,0)POSNSPRBV")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(stringout, "$(P)POSN:SP")
{
	field(DESC, "Set target")
	field(DTYP,"asynOctetWrite")
	field(FLNK, "$(P)INT:POSN:SP")
	field(OUT,"@asyn($(LOOKUP),0,0)POSNSP")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(longin, "$(P)IPOSN:SP:RBV")
{
	field(DESC, "Current target index")
	field(DTYP,"asynInt32")
	field(INP,"@asyn($(LOOKUP),0,0)IPOSNSPRBV")
	field(EGU, "")
}

record(longout, "$(P)IPOSN:SP")
{
	field(DESC, "Set target by index")
	field(DTYP,"asynInt32")
	field(FLNK, "$(P)INT:POSN:SP")
	field(OUT,"@asyn($(LOOKUP),0,0)IPOSNSP")
	field(EGU, "")
}

record(fanout, "$(P)INT:POSN:SP")
{
	field(DESC, "Propagate set")
	field(LNK1, "$(P)POSN:SP:RBV")
	field(LNK2, "$(P)IPOSN:SP:RBV")
	field(LNK3, "$(P)COORD1")
	field(LNK4, "$(P)COORD2")
}

record(stringin, "$(P)POSN")
{
	field(DESC, "Current position")
	field(SCAN, "1 second")
	field(DTYP,"asynOctetRead")
	field(INP,"@asyn($(LOOKUP),0,0)POSN")
    field(FLNK, "$(P)IPOSN")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(longin, "$(P)IPOSN")
{
	field(DESC, "Current position index")
	field(DTYP,"asynInt32")
	field(INP,"@asyn($(LOOKUP),0,0)IPOSN")
	field(EGU, "")
}

record(ai, "$(P)STATIONARY")
{
    field(DESC, "Is sample in position")
	field(SCAN, "1 second")
	field(INP, "$(TARGET_DONE)")
	field(FLNK, "$(P)POSITIONED")
	field(EGU, "")
    info(INTEREST, "HIGH")
}
record(ai, "$(P)STATIONARY2")
{
    field(DESC, "Is sample in position")
	field(SCAN, "1 second")
	field(INP, "$(TARGET_DONE2=)")
	field(FLNK, "$(P)POSITIONED")
	field(EGU, "")
    info(INTEREST, "HIGH")
}

record(ai, "$(P)COORD1")
{
	field(DESC, "Target position 1")
	field(DTYP,"asynFloat64")
	field(FLNK, "$(P)INT:WRITE1")
	field(EGU,"mm")
	field(PREC,"1")
	field(VAL,"0")
	field(INP,"@asyn($(LOOKUP),0,0)COORD1")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(dfanout, "$(P)INT:WRITE1")
{
	field(DESC, "Pushes COORD1 to motor")
	field(DOL, "$(P)COORD1")
	field(OMSL, "closed_loop")
	field(OUTA, "$(TARGET_PV1)")
	field(SELM, "Mask")
	field(SELN, "1")
	field(FLNK, "$(TARGET_PV1)")
}

record(ao, "$(P)COORD1:RBV")
{
	field(DESC, "Current motor1 position")
	field(DTYP,"asynFloat64")
	field(FLNK, "$(P)POSN")
	field(EGU,"mm")
	field(PREC,"1")
	field(OUT,"@asyn($(LOOKUP),0,0)COORD1RBV")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(dfanout, "$(P)INT:READ1")
{
	field(DESC, "Updates COORD1:RBV")
	field(SCAN, "1 second")
	field(DOL, "$(TARGET_RBV1) MS")
	field(OMSL, "closed_loop")
	field(OUTA, "$(P)COORD1:RBV MS")
	field(SELM, "Mask")
	field(SELN, "1")
	field(FLNK, "$(P)COORD1:RBV")
}

record(ai, "$(P)COORD2")
{
	field(DESC, "Target position 2")
	field(DTYP,"asynFloat64")
	field(FLNK, "$(P)INT:WRITE2")
	field(EGU,"mm")
	field(PREC,"1")
	field(VAL,"0")
	field(INP,"@asyn($(LOOKUP),0,0)COORD2")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(dfanout, "$(P)INT:WRITE2")
{
	field(DESC, "Pushes COORD2 to motor")
	field(DOL, "$(P)COORD2")
	field(OMSL, "closed_loop")
	field(OUTA, "$(TARGET_PV2=)")
	field(SELM, "Mask")
	field(SELN, "1")
	field(FLNK, "$(TARGET_PV2=)")
}

record(ao, "$(P)COORD2:RBV")
{
	field(DESC, "Current motor2 position")
	field(DTYP,"asynFloat64")
	field(FLNK, "$(P)POSN")
	field(EGU,"mm")
	field(PREC,"1")
	field(OUT,"@asyn($(LOOKUP),0,0)COORD2RBV")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(dfanout, "$(P)INT:READ2")
{
	field(DESC, "Updates COORD2:RBV")
	field(SCAN, "1 second")
	field(DOL, "$(TARGET_RBV2=) MS")
	field(OMSL, "closed_loop")
	field(OUTA, "$(P)COORD2:RBV MS")
	field(SELM, "Mask")
	field(SELN, "1")
	field(FLNK, "$(P)COORD2:RBV")
}

record(ao, "$(P)RESET")
{
	field(DESC, "Reread the lookup file")
	field(DTYP,"asynFloat64")
	field(FLNK, "$(P)INT:RESET")
	field(OUT,"@asyn($(LOOKUP),0,0)RESET")
	field(PINI,"YES")
}

record(fanout, "$(P)INT:RESET")
{
	field(DESC, "Propagate reset")
	field(LNK1, "$(P)_POSITIONS")
	field(LNK2, "$(P)INT:READ1")
	field(LNK3, "$(P)POSN:SP:RBV")
	field(LNK4, "$(P)IPOSN:SP:RBV")
}

record(ao, "$(P)NUMAXES")
{
	field(DESC, "Number of axes")
	field(DTYP,"asynFloat64")
    field(SCAN, "I/O Intr")
	field(EGU,"")
	field(PREC,"1")
	field(OUT,"@asyn($(LOOKUP),0,0)NUMAXES")
}

record(longin, "$(P)POSN:NUM")
{
	field(DESC, "Number of positions")
	field(DTYP,"asynInt32")
    field(SCAN, "I/O Intr")
	field(INP,"@asyn($(LOOKUP),0,0)NUMPOS")
	field(EGU, "")
}

record(ai, "$(P)TOLERENCE")
{
	field(VAL, "$(TOL,1)")
}

record(calc, "$(P)POSITIONED") 
{
	field(SCAN, "1 second")
	field(INPA, "$(TARGET_DONE)")
    field(INPB, "$(TARGET_DONE2=)")
#	field(INPC, "$(P)COORD1")
#	field(INPD, "$(P)COORD1:RBV")
#    field(INPE, "$(P)COORD2")
#	field(INPF, "$(P)COORD2:RBV")
#	field(INPD, "$(P)TOLERENCE")
    field(INPC, "$(P)NUMAXES")
#	field(CALC, "A&&ABS(B-C)<D")
	field(CALC, "C==1?A:A&&B")
}

# epics string is 40 characters, so NELM in char waveform _POSITIONS is 40 * NELM in POSITIONS
# need intermediate char waveform as ASYN does not do currently handle string waveforms

record(waveform,"$(P)POSITIONS") 
{
    field(DESC, "Available positions")
	field(FTVL,"STRING")
	field(NELM,"100")
}

record(waveform,"$(P)_POSITIONS") 
{
	field(DTYP,"asynOctetRead")
	field(FTVL,"CHAR")
	field(NELM,"4000")
	field(INP,"@asyn($(LOOKUP),0,0)POSITIONS")
	field(FLNK, "$(P)_WFCTOS")
}

record(aSub, "$(P)_WFCTOS")
{
  field(SNAM, "charToStringWaveform")
  field(INPA, "$(P)_POSITIONS")
  field(FTA, "CHAR")
  field(NOA, "4000")
  field(INPB, "$(P)_POSITIONS.NORD")
  field(FTB, "ULONG")
  field(NOB, "1")
  field(OUTA, "$(P)POSITIONS PP")
  field(FTVA, "STRING")
  field(NOVA, "100")
} 

